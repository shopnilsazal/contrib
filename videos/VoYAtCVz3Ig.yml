# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - 'distributed systems'
    - cloud
    - containers
    - docker
    - architecture
title: 'How a Service Mesh Helped Us Build Production Cloud-Native Services - Israel Sotomayor'
recordingDate: 1525452401
description: "Want to view more sessions and keep the conversations going?  Join us for KubeCon + CloudNativeCon North America in Seattle, December 11 - 13, 2018 (http://bit.ly/KCCNCNA18) or in Shanghai, November 14-15 (http://bit.ly/kccncchina18).\n\nFrom eval to prod: How a Service Mesh Helped Us Build Production Cloud-Native Services - Israel Sotomayor, Moltin (Beginner Skill Level)\n\nMoltin is an online solution that builds unified APIs to help companies process payments, inventories, and ecommerce. Helping other companies process financial transactions means that running robust reliable systems is a key business concern. In this talk, Israel Sotomayor (Software Engineer) covers how Moltin used Linkerd in production from day 0; in other words, this is a look at going from evaluation through running in production. Israel explains how Moltin systems started as a monolithic beast that needed a full architectural revamp to decompose it into microservices. In shifting to microservices, several key concerns presented themselves and his team was able to use Linkerd throughout the process to solve practical problems. Israel shares his insights, lessons learned, and practical tips you can use to make adopting cloud-native architectures achievable using a service mesh.\n\nAbout Israel\nIsrael Sotomayor is an Infrastructure Engineer at Moltin. He has a multi disciplinary background in different technologies and areas, including work as both a platform engineer and infrastructure engineer. Although his background is varied, he's passionate about distributed systems, scalability, operation, tooling, and automation. His recent work at Moltin has driven him deep into working with containers and cloud native applications. He spends most days building scalable infrastructure, teaching others about cloud-native approaches, and working with tools like Docker, Linkerd, Fluentd, Terraform and Racher."
