# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - 'distributed systems'
    - performance
    - mobile
    - architecture
    - java
    - spring
title: 'gRPC 101 - building fast and efficient microservices'
language: English
recordingDate: 1520845450
description: "by Ray Tsang\n\nAt: FOSDEM 2017\n\ngRPC is a high performance, open source, general RPC framework that putsmobile and HTTP/2 first. gRPC is based on many years of Google's experience inbuilding distributed systems - it is designed to be low latency, bandwidth andCPU efficient, to create massively distributed systems that span data centers,as well as power mobile apps, real-time communications, IoT devices and APIs.It's also interoperable between multiple languages.\n\nBut beyond that fact that it's more efficient than REST, we'll look into howto use gRPC's streaming API, where you can establish server-side streaming,client-side streaming, and bidirectional streaming! This allows developers tobuild sophisticated real-time applications with ease.\n\nIn addition to learning about gRPC and HTTP/2 concepts with code anddemonstrations, we'll also deep dive into integration with existing buildsystems such as Maven and Gralde, but also frameworks such as Spring Boot andRxJava. \\- Configuring projects to generate gRPC stub code \\- Using Protobuf3to define services \\- Creating synchronous and asynchronous services, withstreaming. \\- Load balancing \\- Interceptors\n\ngRPC is a high performance, open source, general RPC framework that putsmobile and HTTP/2 first. gRPC is based on many years of Google's experience inbuilding distributed systems - it is designed to be low latency, bandwidth andCPU efficient, to create massively distributed systems that span data centers,as well as power mobile apps, real-time communications, IoT devices and APIs.It's also interoperable between multiple languages.\n\nBut beyond that fact that it's more efficient than REST, we'll look into howto use gRPC's streaming API, where you can establish server-side streaming,client-side streaming, and bidirectional streaming! This allows developers tobuild sophisticated real-time applications with ease.\n\nIn addition to learning about gRPC and HTTP/2 concepts with code anddemonstrations, we'll also deep dive into integration with existing buildsystems such as Maven and Gralde, but also frameworks such as Spring Boot andRxJava. \\- Configuring projects to generate gRPC stub code \\- Using Protobuf3to define services \\- Creating synchronous and asynchronous services, withstreaming. \\- Load balancing \\- Interceptors\n\n\nRoom: UA2.220 (Guillissen)\nScheduled start: 2017-02-05 09:40:00"
