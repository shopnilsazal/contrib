# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - ml
    - python
title: 'Ankit Bahuguna - Query Embeddings: Web Scale Search powered by Deep Learning and Python'
recordingDate: 1470067006
description: "Ankit Bahuguna - Query Embeddings: Web Scale Search powered by Deep Learning and Python\n[EuroPython 2016]\n[18 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/query-embeddings)\n\nQuery Embeddings is an unsupervised deep learning based system, built\nusing Python and open source libraries (Annoy, keyvi etc.) which\nrecognizes similarity between queries and their vector\nrepresentations, for a web scale search engine integrated within Cliqz\nbrowser [https://cliqz.com/en]. It improves recall for previously\nunseen queries and is one of the many key components of our search\nstack. The framework be utilized by other low latency systems\ninvolving vector representations.\n\n-----\n\nA web search engine allows a user to type few words of query and it\npresents list of potential relevant results within fraction of a\nsecond. Traditionally, keywords in the user query were fuzzy-matched\nin realtime with the keywords within different pages of the index and\nthey didn't really focus on understanding meaning of query. Recently,\nDeep Learning + NLP techniques try to _represent sentences or\ndocuments as fixed dimensional vectors in high dimensional space_.\nThese special vectors inherit semantics of the document.\n\nQuery embeddings is an unsupervised deep learning based system, built\nusing Python, Word2Vec, Annoy and Keyvi (https://github.com/cliqz-\noss/keyvi) which recognizes similarity between queries and their\nvectors  for a web scale search engine within Cliqz browser.\n(https://cliqz.com/en)\n\n![][1]\n\nThe goal is to describe how query embeddings contribute to our\nexisting python search stack at scale and latency issues prevailing in\nreal time search system.  Also is a preview of separate vector index\nfor queries, utilized by retrieval system at runtime via ANNs to get\nclosest queries to user query, which is one of the many key components\nof our search stack.\n\n![][2]\n\nPrerequisites: Basic experience in NLP, ML, Deep Learning, Web search\nand Vector Algebra. Libraries:  Annoy.\n\n[1]: https://sites.google.com/site/netankit/1.png\n[2]: https://sites.google.com/site/netankit/3.png"
