# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - ruby
title: 'RedDotRuby 2014 - SOLID Design Principles in Ruby by Anil Wadghule'
recordingDate: 1406152039
description: "This talk covers following SOLID design principles in Ruby with live code examples.\n\nSingle responsibility principle: an object should have only a single responsibility. Open/closed principle: an object should be open for extension, but closed for modification. Liskov substitution principle: objects in a program should be replaceable with instances of their subtypes without altering the correctness of that program Interface segregation principle: many client specific interfaces are better than one general purpose interface. Dependency inversion principle: depend upon abstractions, do not depend upon concretions Talk will have live code example which will be evolved step by step to use all SOLID principles. This talk will also answer the question why just following these principles will make your code more clean readable, extensible and better. Also make you better programmer.\n\nHelp us caption & translate this video!\n\nhttp://amara.org/v/FGY2/"
