# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - unix
    - performance
    - security
title: 'How to Build an Open Source Embedded Video Player'
language: English
recordingDate: 1521326754
description: "by Michael Tretter\n\nAt: FOSDEM 2017\n\nVideo playback for embedded devices such as infotainment systems and mediacenters demands hardware accelerators to achieve reasonable performance.Unfortunately, vendors provide the drivers for the accelerators only as binaryblobs. We demonstrate how we built a video playback system that uses hardwareacceleration on i.MX6 by using solely open source software includingGstreamer, Qt QML, the etnaviv GPU driver, and the coda video decoder driver.\n\nWhile hardware accelerators are necessary to provide reasonable performancefor video playback on embedded devices, the drivers that are provided asbinary blobs by hardware vendors cause a lot of problems. They are linked tospecific versions of the Linux kernel, may contain security and performanceissues, and are pretty much impossible to debug by developers trying to builda system based on these drivers.\n\nWe built an i.MX6 based embedded system that simultaneously decodes anddisplays four videos. Our system solely uses open source drivers to controlthe available hardware accelerators.\n\nThe GUI consists of a Qt application based on QML. Using Qt and QML allows usto use OpenGL for compositing the user interface. OpenGL is backed by the opensource etnativ GPU driver and the Vivante GPU.\n\nThe Qt application receives the video streams from a Gstreamer pipeline (usingplaybin). The Gstreamer pipeline contains a v4l2 decoder element, which usesthe coda v4l2 driver for the CODA 960 video encoder and decoder IP core (VPUin the Freescale/NXP Reference Manual), and a sink element to make the framesavailable to the Qt application.\n\nThe entire pipeline including the Gstreamer to Qt handover uses dma_bufs toavoid copies in software.\n\nThis example shows how to use open source drivers to ease the development ofvideo and graphics applications on embedded systems.\n\n\nRoom: UD2.120 (Chavanne)\nScheduled start: 2017-02-04 14:30:00"
