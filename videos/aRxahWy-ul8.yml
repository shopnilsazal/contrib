# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - web
    - python
    - javascript
title: 'Brian Granger | Altair Declarative, Statistical Visualization for Python'
recordingDate: 1472067432
description: "PyData SF 2016\n\nAltair is a declarative statistical visualization library for Python. Altair provides a user-centric Python API on top of the declarative visualization stack of Vega-Lite, Vega and D3.js. A wide range of statistical visualizations can be created with only a few carefully design abstractions.\nAltair provides a Python API for building statistical visualizations in a declarative manner. By statistical visualization we mean:\n• The data source is a DataFrame that consists of columns of different data types (quantitative, ordinal, nominal and date/time).\n• The DataFrame is in a tidy format where the rows correspond to samples and the columns correspond the observed variables.\n• The data is mapped to the visual properties (position, color, size, shape, faceting, etc.) using the group-by operation of Pandas and SQL.\nThe Altair API contains no actual visualization rendering code but instead emits JSON data structures following the Vega-Lite specification. For convenience, Altair can optionally use ipyvega to display client-side renderings seamlessly in the Jupyter notebook.\nAltair has the following features:\n• Carefully-designed, declarative Python API based on traitlets.\n• Auto-generated internal Python API that guarantees visualizations are type-checked and in full conformance with the Vega-Lite specification.\n• Auto-generate Altair Python code from a Vega-Lite JSON spec.\n• Display visualizations in the live Jupyter Notebook, on GitHub and nbviewer.\n• Export visualizations to PNG images, stand-alone HTML pages and the Online Vega-Lite Editor.\n• Serialize visualizations as JSON files.\n• Explore Altair with 40 example datasets and over 70 examples.\nAltair is developed by Brian Granger and Jake Vanderplas in close collaboration with the UW Interactive Data Lab."
