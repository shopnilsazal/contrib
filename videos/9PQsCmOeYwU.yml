# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - python
title: 'Lrparsing, when regular expressions aren''t enough by Clinton Roy'
recordingDate: 1438658621
description: "Lrparsing is a fast, well documented and tested parsing infrastructure for Python. Parsing infrastructures are used when the input to be parsed is too complex to be done by regular expressions alone. Parsing infrastructures are ideally suited to parsing programming languages and configuration files. Lrparsing is roughly equivalent to the combination of Flex and Bison, except completely implemented in Python, and is thus very Pythonic.\n\nThe rest of the abstract uses the following Python snippet as an example:\n\n1 if option else 2\n\nlrparsing provides both a lexer (which breaks the input down into tokens, e.g.:\n\n ['1', 'if' , 'option',  'else', '2']\n\nand a parser generator, which produces a concrete parse tree:\n\n(«ternary», («bool», 'option'), («expr», '1')), («expr», '2')))\n\n Lrparsing provides Pythonic syntax support to easily construct parsers for programming languages, Domain Specific Languages and configuration file formats.\n\nLrparsing is very well suited to constructing Concrete Parse Trees but has little support for creating Abstract Syntax Trees (AST), which are much easier to use: My work has added Abstract Syntax Tree support to lrparsing, yielding exactly the same AST nodes that the Python AST module supports:\n\nIfExp(condition, 1, 2)\n\nThis talk will give an overview of the major features of Lrparsing, then look at my work to add AST support. \n\nPyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. \n\nJuly 31-August 4, Brisbane, Queensland, Australia"
