# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - bigdata
    - performance
    - python
title: 'Giuseppe Di Bernardo - Big Data Analytics at the MPCDF: GPU Crystallography with Python'
language: English
recordingDate: 1507903760
description: "\"Big Data Analytics at the MPCDF: GPU Crystallography with Python\n[EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1]\n[Rimini, Italy]\n\nIn close collaboration with scientists from MPG, the Max Planck Computing and Data Facility is\_engaged in the development and optimization of algorithms and applications for high performance\_computing, as well as in the design and\_implementation of solutions for data-intensive projects.\_Python is now used at MPCDF in the emerging area of “atom probe crystallography” (APT): a Fourier spectral analysis in 3D reciprocal space can be simulated in order to reveal both composition and crystallographic structure at the atomic scale of billions APT experimental data sets. The Python data ecosystem has proved to be well suited to this, as it has grown beyond the confines of single machines to embrace scalability. This talk aims to describe our approach to scaling across multiple GPUs, and the role of our visualization methods too. Our data workflow analysis relies on the GPU-accelerated Python software package called PyNX, an open source Python library which provides fast parallel computation scattering. The code is well suited for GPU computing, using both the pyCUDA and pyOpenCL libraries. Exploratory data analysis and performance tests are initially carried on through Jupyter notebooks and Python packages e.g., pandas, matplotlib, plotly. In production stage, interactive visualization is realized by using standard scientific tool, e.g. Paraview, an open-source 3D visualization program which e.g. requires Python modules to generate visualization components within VTK files.\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/"
