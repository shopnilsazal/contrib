# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - mobile
    - architecture
    - python
    - javascript
title: 'Tobias Oberstein - Scaling Microservices with Crossbar.io'
recordingDate: 1470464949
description: "Tobias Oberstein - Scaling Microservices with Crossbar.io\n[EuroPython 2016]\n[22 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/scaling-microservices-with-crossbario)\n\nMicroservices offer an efficient way to only scale those parts of your\napplication which are performance bottlenecks.\n\nWe will demo and explain open source tech which allows the easy\nscaling out across distributed devices. The audience will be able to\ndonate processor cycles from their devices to our demo application\n(and win a hardware prize).\n\nThe demo uses [Crossbar.io][1], an open souce application router\n(written in Python), and all demo code is open source.\n\n[1]: http://crossbar.io\n\n-----\n\nMicroservices offer an efficient way to only scale parts of your\napplications which are hotspots. Instead of running multiple instances\nof a monolithic application, with all the complexity and operational\nrun-time overhead that entails, you can scale only the functionality\nwhich is a bottleneck. Today that increasingly means scaling out, not\nup.\n\nWe will go over open source technologies which allow the easy scaling\nout across distributed devices.\n\nA live demo will allow the audience to participate with its devices\n(including mobile phones) in an application. (There will be prizes for\nthe donors.)\n\nThe demo uses [Crossbar.io,][1] an open source router for the open\n[Web Application Messaging Protocol (WAMP) ][2] written in Python.\nWAMP supports routed Remote Procedure Calls, and Crossbar.io uses\nthese to implement various load-balancing strategies across endpoints\nwhich register a particular procedure.\n\nWAMP has a first-class library for Python ([Autobahn|Python][3]), but\nis cross-language, with support for a total of 11 languages. This\nallows you to implement polyglot and heterogenos microservices\napplications, from Python to Node.js to C# right into the browser.\nMicroservices can run anywhere, since the outgoing connections to the\nrouter which WAMP uses avoid NAT problems.\n\nAll software used is open source, and all demo code is provided on\nGitHub under the MIT license.\n\n[1]: http://crossbar.io\n[2]: http://wamp-proto.org\n[3]: http://autobahn.ws/python"
