# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - php
    - security
    - testing
    - functional
title: 'HUNT: Data Driven Web Hacking & Manual Testing - JP Villanueva - AppSecUSA 2017'
language: English
recordingDate: 1507498870
description: "HUNT: Data Driven Web Hacking & Manual Testing\nSign up or log in to save this to your schedule and see who's attending!\n\nWhat if you could turbocharge your web hacking without having to sacrifice efficiency? Since pure automation misses so much important information, why not use powerful alerts created from real threat intelligence? What if you had these powerful alerts in as a plugin in a tool that that is so ubiquitous in web hacking that itâ€™s synonymous to its very definition? What if this plugin not only told wyou where to look for vulnerabilities, but also gave you curated resources for additional exploitation and methodology? What if you could organize your web hacking methodology inside of your tool? Well, dream no more! HUNT is a new Burp Suite extension that aims to arm web hackers with parameter level suggestions on where to look for certain classes of vulnerabilities such as SQL Injection, Command Injection, Local/Remote File Inclusion, and more! The data that drives this plugin are parsed from hundreds of real-world assessments which provide the user with the means to effectively root out critical issues. Not only will HUNT help you assess large, hard targets more thoroughly, but it also aims to organize common web hacking methodologies right inside of Burp Suite. As an open source project, we will go over the data driven design of HUNT and its core functionality.\n\n \nDetailed Outline\n\nHUNT's core idea is to parse large data sets of web application flaws and transforming the results into a meaningful testing tool. We've taken one of the largest known vulnerability data sets, the bounty data at Bugcrowd, and scrubbed it all down to vulnerability class and parameter name. With this data, we can infer patterns in web application vulnerability locations.\n\nToday, one of the things we struggle with as an industry is manual testing for large, complex applications. With the amount of surface area to cover on assessments, we are forced to rely on automation. And while automation is great, it fails to apply the years of experience we have as pentesters in identifying edge-cases in web vulnerabilities that cannot be easily found by anything other than a human.\n\n \n\nHUNT will log and alert commonly vulnerable areas for manual testers to look at based on the collective knowledge of hackers all over the world. This will help break down complex applications into meaningful and testable areas. We are not aiming to replace scanners in this fashion, but instead, we are making sure web hacking gets the manual tester love that it truly deserves.\n\n \n\nThe tool covers critical vulnerability classes that can be meaningfully parsed at the moment:\n\n \n\nSQL Injection\n\nLocal/Remote File Includes\n\nDirectory Traversal\n\nOS Command Injection\n\nServer Side Request Forgery\n\nFile Upload Vulnerabilities\n\nInsecure Direct Object References\n\nServer Side Template Injection\n\n \n\nSections of the Talk\n\nThe Problem\n\nWeb hacking training lacks detailed tribal knowledge of vulnerability location\n\nSites are larger and more complex than ever and even harder to test thoroughly with current manual testing techniques and methodologies\n\nNo in-tool workflow for web hacking methodologies\n\nThe Data\n\nUnderstanding the data set\n\nLearning about data and patterns discerned\n\nGive examples of the data of vulnerable parameters\n\nExamples: file, document, folder, style, pdf\n\nThe Tool\n\nExplore HUNT's install and GUI\n\nExplore some sample alerts live\n\nExplore HUNT's methodology and tester references\n\nExplore HUNT's methodology organization tab\n\nTalk about the future and contribution\n\n\n\nJP Villanueva\nTrust & Security Engineer, Bugcrowd\nJP Villanueva is a Trust & Security Engineer at Bugcrowd. Before Bugcrowd, JP spent 2 years as an Application Security Engineer and another 2 years as a Solutions Architect at WhiteHat Security helping customers become more secure.\n\n-\n\nManaged by the official OWASP Media Project https://www.owasp.org/index.php/OWASP_Media_Project"
