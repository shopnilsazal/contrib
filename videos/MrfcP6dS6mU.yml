# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - 'distributed systems'
    - storage
    - cloud
    - azure
    - architecture
title: 'Gopal Kakivaya: The Essence of Service Fabric'
language: English
recordingDate: 1523652891
description: "Gopal Kakivaya is the Vice President of Microsoft Azure's Hyperscale Compute team, which is the home of Service Fabric, an open source, general purpose distributed systems infrastructure and microservices platform that powers several of Azure's core services. Of course, it's not just for internal use by the likes of Cosmos DB, SQL Azure, Intune, Skype for Business, Azure VM APIs, Event Grid, and more... It's tailored specifically for general purpose use for running cloud (micro)services of any size and complexity - authored by you.\n\nThe primary goal of Service Fabric, from a developer's perspective is, as Gopal says, \"to make programming in the large (planetary scale) feel like programming in the small (your dev machine)\". All of the distributed computing complexity of the cloud is abstracted away and you're left to focus on what really matters to you and your business: your (micro)service(s), your scenarios, your code.\n\nSo, how does Service Fabric solve some of the key hard problems of distributed computing, even abstracting them away completely from developers? Where did Service Fabric originate and where is it heading?  What's the essence of Service Fabric?\n\nGopal gives an introductory tour of Service Fabric's subsystem architecture. We also discuss Service Fabric's built-in fault analysis services, the importance of verifying the behavior of cloud services under faulty conditions, and the future of Service Fabric's Chaos Engineering infrastructure.  \n\nTune in. Enjoy. Learn.\n\n\n\nMore information: \n\nService Fabric Overview: https://docs.microsoft.com/azure/service-fabric/service-fabric-overview\n\nService Fabric Github Repo: \nhttps://github.com/microsoft/service-fabric \n\nCore Service Fabric Subsystem Explorer: https://github.com/Microsoft/service-fabric/tree/master/docs/architecture\n\nService Fabric Controlled Chaos: \nhttps://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos"
