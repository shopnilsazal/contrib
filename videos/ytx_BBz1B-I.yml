# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - ml
    - containers
    - docker
title: 'Masaya Ohgushi - How to apply deep learning for 3D object'
language: English
recordingDate: 1508615442
description: "\"How to apply deep learning for 3D object\n[EuroPython 2017 - Talk - 2017-07-13 - Arengo]\n[Rimini, Italy]\n\nI talk about the \"\"How to achieve the 3D object recognition accuracy 80%(40 category) for 3month \"\n\nDeep Learning  is the good technique for image recognition and speech recognition.\nAnd it apply the other field.\nMany people try to apply the Deep Learning, but it is difficult to make a result.\n\nIn my situation, I have enough knowledge about the 3D object and label data.\nI'll talk about the how to achieve the  80 % (40 category)\n\nIn My approach\n\n\n1:  Getting the Information\n\n1.1: How to choose the information\n1.2: How to choose framework\n2: Getting the Data\n\n2.1: Public data\n2.2: How to make the own data\n\n3: Try  small\n\n3.1: Trying the small data set\n3.2: Trying the train and predict\n\n4: Deciding the direction focus\n4.1: Choose what you can control\n5: Prioritizing with high certainty\n5.1: Pre-process\n5.2: Improve the train speed\n\n6: Increasing  the challenge times\n6.1: Using the GPU\n6.2: CPU optimization\n6.3: multi process\n6.4: resource\n\n7: Parameter Tuning\n\n7.1: Improve Model Versatility or Improve Data Versatility\n7.2: Model Tuning\n7.2.1: RandomDropOut\n7.2.2: LeakyRelu\n7.3: Data Argumantion\n8: Product\n\n8.1: Minimum function\n8.2: Using Docker\n\n\n\nI hope to people who want to apply Deep Learning for the 3D model\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/"
