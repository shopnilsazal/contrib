# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - mobile
    - android
    - testing
    - java
    - functional
title: 'Toothpick: a fresh approach to Dependency Injection by Stéphane Nicolas and Daniel Molinero Reguera'
language: English
recordingDate: 1493107659
description: "This session was given at Paris Android Makers 2017 by Stéphane Nicolas and Daniel Molinero Reguera, Groupon.\n\nMore info: http://androidmakers.fr/schedule/#session-23\nSlides link: https://speakerdeck.com/stephanenicolas/toothpick-a-fresh-approach-to-dependency-injection-di-on-android\n\nYou find RoboGuice simple but slow? And you think Dagger 1 & 2 are fast but complex and bloated? Toothpick is the best of both worlds!\n\nToothpick is a scope tree based, runtime but reflection free implementation of JSR 330. It is pure Java, with a special focus on Android.\n\nToothpick is fast (even faster than Dagger 2 in some cases!) and is simpler to use, with less boilerplate code. Its syntax is very close to Guice. It supports named dependencies, lazy dependencies, providers, and has built-in support for custom scopes. As compared to Dagger 2, Toothpick provides more powerful testing support, allowing you to leverage DI to mock dependencies using either mockito or easymock.\n\nIts explicit scope tree helps developers to build more robust apps. It provides more fine grained control to easily implement complex user flows that span multiple activities or state preservation across configuration changes (e.g. rotations), a common issue when implementing the MVP pattern.\n\nDuring this talk for experts, we will introduce Toothpick, its main features and how it compares to other DI libs. We will explain how Toothpick scopes and scope annotations can solve advanced use cases.\n\nType: Android development\nExperience: expert\n\nAlex Karp Production"
