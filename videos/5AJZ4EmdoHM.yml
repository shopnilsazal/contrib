# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - testing
    - ruby
title: 'MountainWest RubyConf 2015 - The How and Why of Ruby'
recordingDate: 1427643006
description: "by Matthew Clark\nRuby might be one of the easier languages for learning programming, but that doesn’t mean it holds the programmers hand in any way, or is somehow easy. Exactly the opposite. Ruby is flexible enough to allow coders to do just about anything the like, for better or worse. So why is it the language of choice at the coding bootcamps springing up across the country, when it allows new programmers to get into so much trouble? Are we doing these young programmers a disservice by teaching Ruby simply because we love our deliciously readable and expressive examples, or are we tapping into something better for students, an enlightened path that is more likely to propel them up and over the steeper learning curve Ruby demands? With Ruby, students are thrown into the deep end of a culture that believes strongly why we do things one way rather than another. There is a common goal to make the right way to do things also the easiest way. Collaboration is the norm, which is the best way to learn. I could go on, and I will, in the talk. I’ll expand on why Ruby is great as a first language because we are great as a community. We demand so much more from our junior programmers because the tooling is so good and the language is so approachable that students grasp advanced concepts much sooner on the path. We hold juniors to higher levels of quality, testing, and readability and they are better developers in the long run for it. Ruby is a great first language because discussions of the ‘how’ quickly give way to the ‘why’, and junior developers get it, and they don’t stay junior developers for long.\n\nHelp us caption & translate this video!\n\nhttp://amara.org/v/GVgk/"
