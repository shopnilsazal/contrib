# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - web
    - python
    - javascript
title: 'Adam Hajari - From DataFrame to Web Application in 10 Minutes'
recordingDate: 1418405195
description: "View slide presentation here:\nhttps://github.com/adamhajari/spyre\n\nPyData NYC 2014\nAs an engineer, analyst, or scientist, sharing your work with someone outside of your immediate team can be a challenge. End-users embody many roles with a wide range of technical skill and often times no familiarity with Python or the command line. Findings, key results, and models are frequently boiled down to static graphs, tables, and figures presented in short reports or slideshow presentations. However, engaging research and data analysis is interactive, anticipating the users’ questions and giving them the tools to answer those questions with a simple and intuitive user interface.\n\nBrowser based applications are an ideal vehicle for delivering these types of interactive tools, but building a web app requires setting up backend applications to serve up content and creating a UI with languages like HTML, CSS, and JavaScript. This is a non-trivial task that can be overwhelming for anyone not familiar with the web stack.\n\nSpyre is a web application framework meant to help those python developers that might have little knowledge of how web applications works, much less how to build them. Spyre takes care of setting up both the front and back-end of your web application. It uses CherryPy to handle HTTP request logic and Jinja2 to auto-generate all of the client-side nuts and bolts, allowing developers to quickly move the inputs and outputs of their python modules into a browser based application. Inputs, controls, outputs, and the relationships between all of these components are specified in a python dictionary. The developer need only define this dictionary and override the methods needed to generate content (text, tables, and plots).\n\nWhile Spyre apps are launched on CherryPy’s production-ready server, Spyre’s primary goal is to provide a development path to simple light-weight apps without the need for a designer or front-end engineer. For example, Spyre can be used for\n\n-rapid prototyping and building MVPs\n-data exploration\n-developing educational resources\n-building monitoring tools\n-presenting interactive scientific or analytical results to a non-technical audience\n\njust to name a few.\nAt Next Big Sound we recently used Spyre to build an app to visualize the effects of sampling parameter values on the volume of tweets collected from one of our data providers.\n\nWeb applications like this can turn a highly technical process into a simple tool that can be used by anyone with any level of technical skill.\n\nAfter you’ve finished the foundational parts of your project -- the data collection, data cleaning, exploration, modeling, and analysis -- Spyre provides a quick and simple way to package the results into an interactive web application that can be viewed by the rest of the world."
