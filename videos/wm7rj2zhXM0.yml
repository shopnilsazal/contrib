# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - containers
    - kubernetes
    - security
    - lisp
title: 'Network-independent ACLs: Why Security Shouldn''t Depend on Your Network [I] - Bernard Van De Walle'
recordingDate: 1491874339
description: "Network-independent ACLs: Why Security Shouldn't Depend on Your Network [I] - Bernard Van De Walle, Aporeto\n\nThe conventional view is that Security and ACLs are implemented in the network, through a set of typical firewall rules that rely on the IP and Port number.\n\nIn Kubernetes, everything is a label and pod communications are defined as a set of labels allowed to communicate with each other. (Through the definition of network policies).\nThis model fully abstracts the pod network information (IP/Port) from the pod's identity (pod's labels). \n\nWith the traditional approach, the NetworkPolicies are implemented by the Kubernetes networking backend (Flannel, Calico, ...) that translates the policies into a set of IPs/Ports that need to be constantly updated.\n\nHowever, another approach is possible by using the labels associated with each pods directly as metadata on the networking stack (transparently from the networking backend). NetworkPolicies then become a simple API-level authentication scheme that is completely independent from the network backend.\n\nThis talk will go over the pros and cons of each model, describing specific use-cases where it makes sense to use the one or the other.\n\nIt will introduce a new way of implementing those NetworkPolicies that doesn't rely at all on network primitives, but only on the set of labels associated to each pod.\n\nNetworking should be used for reachability between cluster nodes. \nbut security and network policies should not always be tied to your networking.\n\nAbout Bernard Van De Walle\nWorking initially on massive production core/edge network routers, I saw the evolution of networking and security from fully physical to the new models emerging today: SDN, virtual networks and massive scaling for micro-services. After spending 4 years implementing a well-recognized SDN engine and controller, I joined the initial team at Aporeto to change the way ACLs and security are done in traditional networks."
