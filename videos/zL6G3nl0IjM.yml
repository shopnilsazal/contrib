# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - cloud
    - aws
    - devops
    - containers
    - docker
    - agile
    - python
title: 'Sebastian Neubauer - Infrastructure as Code: "pip install" your environment'
recordingDate: 1470121102
description: "Sebastian Neubauer - Infrastructure as Code: \"pip install\" your environment\n[EuroPython 2016]\n[20 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/infrastructure-as-code-pip-install-your-environment)\n\nIn this talk I will show how to build your own infrastructure-\nas-a-service on the example of \"Postgraas\", an open source postgres-\nas-a-service I wrote in python just for fun. With a simple curl\nrequest you can get your very own database, just like RDS on AWS. You\nwill learn how easy it is to create such a remarkably useful service\nwith hardly three hundred lines of flask, docker and some glue-code, a\nproject for a rainy Sunday.\n\n-----\n\nContinuous Delivery, DevOps, Lean - all those movements have one thing\nin common: extending the process of software development along the\nwhole value stream, ultimately to the customer. This simple\nrequirement causes surprising serious difficulties on traditional\noperations workflows. All of a sudden, a single manual ticket to the\noperations team is a critical blocker in the delivery process.\nTherefore all parts of the infrastructure, storage, databases,\nidentities, compute resources must be provided as a self service for\nthe developers in order to be able to achieve this goal. What one may\ncall \"the cloud\" (including self hosted ones like open stack) is such\na successful model not least because they offer exactly this \"ticket-\nless\" self-service. But why should we wait for \"the cloud\" to offer\nwhat we really need? We are python developers, we are hackers!\n\nIn this talk I will show how to build your own infrastructure-\nas-a-service on the example of \"Postgraas\", an open source postgres-\nas-a-service I wrote in python just for fun. With a simple curl\nrequest you can get your very own database, just like RDS on AWS. You\nwill learn how easy it is to create such a remarkably useful service\nwith hardly three hundred lines of flask, docker and some glue-code, a\nproject for a rainy Sunday. After the talk you will know how to amaze\nyour colleagues by eliminating an annoying ticket or manual workflow\nwith a simple flask app and some creativity."
