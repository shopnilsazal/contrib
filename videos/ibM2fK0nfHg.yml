# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - unix
    - testing
title: 'Kernel DLC Metrics, Statistic Analysis and Bug-Patterns'
language: English
recordingDate: 1520694539
description: "by Nicholas Mc Guire\n\nAt: FOSDEM 2017\n\nSIL2LinuxMP strives to qualify a defined GNU/Linux subset for the use insafety-related systems by \"assessment of non-compliant development\". Todemonstrate that the kernel has achieved suitable reliability and correctnessproperties basic metrics of such properties and their statistic analysis canbe used as part of the argument. While IEC 61508 Ed 2 always pairs testing andanalysis, we believe that for a high complexity system traditional testing isof relatively low effectiveness and analytical methods need to be the primarypath.\n\nIn this talk we outline the used methods and give examples as well as keyfindings.\n\nSIL2LinuxMP strives to qualify a defined GNU/Linux subset for the use insafety-related systems by \"assessment of non-compliant development\". Todemonstrate that the kernel has achieved suitable reliability and correctnessproperties basic metrics of such properties and their statistic analysis canbe used as part of the argument. Linux has a wealth of analytical tools built-in to it which allow to extract information on compliance, robustness ofdevelopment, as well as basic metrics on complexity or correctness withrespect to defined properties. While IEC 61508 Ed 2 always pairs testing andanalysis, we believe that for a high complexity system traditional testing isof relatively low effectiveness and analytical methods need to be the primarypath. To this ends we outline some approaches taken:\n\n  * Bug-age analysis  * Bug-rates and trend analysis  * Code-complexity/bug relationship  * Brain-dead correctness analysis  * Interface and type-correctness analysis  * API compliance analysis  * Analysis of build-bot data\n\nWhile much of the data points to robust and mature code there also are someareas where problems popped up. In this talk we outline the used methods andgive examples as well as key findings. FLOSS development has reached a quiteimpressive maturity, to substantially go beyond we think it will need the useof quantitative process and code metrics - these results from SIL2LinuxMP maybe a starting point.\n\n\nRoom: UD2.218A\nScheduled start: 2017-02-05 11:00:00"
