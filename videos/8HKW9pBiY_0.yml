# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - functional
title: 'Lambda Days 2015 - Tomas Petricek - Literate_programming.With("F#")'
recordingDate: 1428569908
description: "Tomas Petricek\nLong time F# enthusiast, author of Real-world Functional Programming and computer science PhD student\n\nTomas is a computer scientist, book author and open-source developer. He is the lead developer of several F# data-science libraries, but he also contributed to the design of the F# language itself as an intern and independent consultant. He is the author of a popular book called \"Real-World Functional Programming\" and editor of a collection of practical F# case studies \"F# Deep Dives\".\n\nTomas is a PhD student at the University of Cambridge, working on types for understanding context usage in programming languages. He is a founder of DualNotion ltd. where he provides training and consulting services. He recently spent 3 months in New York, working on F# tools for data science at BlueMountain Capital.\n\nLiterate_programming.With(\"F#\")\n\nThe idea of literate programming is to combine program code with explanation in a natural language, so that the entire source code can be read as an explanation of how the program is constructed and what it does. Literate programming is useful in a wide range of areas:\n\n- you can write literate scripts to document how a library works\n- you can use it to explain the logic behind complex calculations or mathematical models\n- you can use it to write data analysis that is executable and produces the final report\n- and as a bonus, you can use it to generate slides for your programming talks!\n\n\nIn this talk, I'll talk about the F# tools for literate programming, including the F# Formatting library (which parses literate F# and Markdown), ProjectScaffold (a template for projects that lets you write literate documentation) and FsReveal (a tool for creating presentation using F#). You'll learn useful things about documenting your (not just F#) code and about writing understandable code and data analyses."
