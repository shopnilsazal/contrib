# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - devops
    - testing
    - agile
    - python
title: 'Sebastian Neubauer - A Pythonic Approach to Continuous Delivery'
recordingDate: 1438578946
description: "Sebastian Neubauer - A Pythonic Approach to Continuous Delivery\n[EuroPython 2015]\n[22 July 2015]\n[Bilbao, Euskadi, Spain]\n\nSoftware development is all about writing code that delivers\nadditional value to a customer. Following the agile and lean approach\nthis value created by code changes should be continuously delivered as\nfast, as early and as often as possible without any compromise on the\nquality.\n\nRemarkably, there is a huge gap between the development of the\napplication code and the reliable and scalable operation of the\napplication. As an example, most of the tutorials about web\ndevelopment with Flask or Django end by starting a local “dummy”\nserver, missing out all the steps needed for production ready\noperation of the web service. Furthermore, as there is no “rocket\nscience” in-between, many proposals to bridge that gap from both\nsides, operations and developers start with sentences like: “you just\nhave to...”, a clear indication that it will cause problems later on\nand also a symptom of a cultural gap between developers and operations\nstaff.\n\nIn this talk I will go through the complete delivery pipeline from\napplication development to the industrial grade operation, clearly\nbiased towards the “DevOps” mindset. Instead of presenting a\nsophisticated enterprise solution, I will outline the necessary\nbuilding blocks for continuous delivery and fill them up with simple\nbut working poor man's solutions, so that it is equally useful for\nprofessional and non-professional developers and operations engineers.\nAfter the talk you will know how to build such a continuous delivery\npipeline with open-source tools like “Ansible”, “Devpi” and “Jenkins”\nand I will share some of my day-to-day experiences with automation in\ngeneral. Although many of the concepts are language agnostic I will\nfocus on the ins and outs in a python universe and outline the\npythonic way of “get this thing running”."
