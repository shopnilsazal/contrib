# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - go
    - containers
    - kubernetes
title: 'SIG API Machinery Deep Dive – Stefan Schimanski, Red Hat (Intermediate Skill Level)'
recordingDate: 1525675477
description: "Want to view more sessions and keep the conversations going? \_Join us for KubeCon + CloudNativeCon North America in Seattle, December 11 - 13, 2018 (http://bit.ly/KCCNCNA18) or in Shanghai, November 14-15 (http://bit.ly/kccncchina18).\n\nSIG API Machinery Deep Dive – Stefan Schimanski, Red Hat (Intermediate Skill Level)\n\nSIG API Machinery is responsible for all generic API topics in Kubernetes, i.e. for the generic API server implementation, API CRUD semantics, discovery the admission control mechanism, conversion, defaulting, persistence with etcd, general controllers like garbage collection, Go client libraries, code generation and extension points like CustomResourceDefinitions, aggregation admission. \n\nThis session will have two parts:\n\n A deep dive into a selection for API Machinery topics, probably: defining API types in Golang, groups+versions+kinds+resources, tags, code-generation, schemes, different variants of codecs &ndash; and how to use all this with CustomResourceDefinitions and a custom client-go client.\ntime for general discussion and opportunity for API machinery questions\n \n This session is targetted especially at:\n \nPeople using the Kubernetes APIs with client-go and wanting to understand what is going on behind the scenes\nPeople extending Kubernetes with APIs using aggregated API servers or CustomResourceDefinitions\n\nAbout Stefan\nStefan is a developer at Red Hat working on Kubernetes and OpenShift,\nwith a focus on API machinery, extension points and developer tools. Stefan is a Google\nSummer of Code mentor and generally loves to teach and help people to learn. \nBefore Red Hat he worked for Mesosphere on Marathon and Spark. By trade, \nStefan is a Mathematician and Computer Scientist, with a PhD in Mathematical Logic."
