# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - python
title: 'Mike Müller - Conda - Easier Installs and Simpler Builds'
recordingDate: 1469951783
description: "Mike Müller - Conda - Easier Installs and Simpler Builds\n[EuroPython 2016]\n[19 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/conda-easier-installs-and-simpler-builds)\n\nLearn about `conda`, the package installer from the scientific\ncommunity. It offers very interesting features that can improve your\ninstallation experience considerably.  The talk gives an overview of\nthe basic usage of `conda`.  It covers the topics installation and\nbuilding of packages.\n`conda` can be combined with `pip`  to use all PyPi packages. Its\ncross-platform and multi-languages features combined with power\nenvironments can help to improve your productivity.\n\n-----\n\nThe BSD license `conda` is a package installer for Python and other languages.\nWhile it originates form the scientific Python community, it can be\nreally useful for\nall Python programmers.\n\nInstallation of Python packages has become much simpler over the last years.\nThe use of  `pip`  and `virtualenv` simplify the installation of\nPython packages a lot.\nHowever,  they are specific to Python.  The Python-agnostic `conda`\nhas advantages\nfor packages with C or Fortran extension that are very common for\nscientific libraries.\n`conda` is cross-platform. According to different statistics,  the\nmost Python users work on Windows. Often is especially complicate to\nget extensions with many dependencies installer on this platform.\n`conda` facilities the installation for Windows considerably.\n\nThis talk introduces the basic usage of  `conda` to install packages.\nThis includes the basic commands for searching  and installing of\npackages. Furthermore, the talk demonstrates the creation of\nenvironments for different Python versions and combinations of\npackages.\n\nThe building of a packages is simple. The talk shows how to build\nrecipes that contain declarations of dependencies .\n\n`conda` can work together  with `pip`. This allows to use all packages\nfrom the Python Package Index ( PyPI). The talk explains the concept\nof channels that allow to get packages from different sources."
