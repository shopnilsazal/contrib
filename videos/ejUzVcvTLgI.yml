# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - python
title: 'Armin Rigo - CFFI: calling C from Python'
recordingDate: 1470722285
description: "Armin Rigo - CFFI: calling C from Python\n[EuroPython 2016]\n[20 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/cffi-calling-c-from-python)\n\nIn this talk, we will see an intro to CFFI, an alternative to using\nthe standard C API to extend Python.  CFFI works on CPython and on\nPyPy.  It\nis a possible solution to a problem that hits notably PyPy --- the\nCPython C API.\n\nThe CPython C API was great and contributed to the present-day success\nof Python, together with tools built on top of it like Cython and SWIG.\nI will argue that it may be time to look beyond it, and present CFFI as\nsuch an example.\n\n-----\n\nI will introduce CFFI, a way to call C libraries from Python.\n\n    http://cffi.readthedocs.org/\n\nCFFI was designed in 2012 to get away from Python's C extension modules,\nwhich require hand-written CPython-specific C code.  CFFI is arguably\nsimpler to use: you call C from Python directly, instead of going\nthrough an intermediate layer.  It is not tied to CPython's internals,\nand works natively on two different Python implementations: CPython and\nPyPy.  It could be ported to more implementations.\n\nIt is also a big success, according to the download statistics.  Some\nhigh-visibility projects like Cryptography have switched to it.\n\nPart of the motivation for developing CFFI is that it is a minimal layer\nthat allows direct access to C from Python, with no fixed intermediate C\nAPI.  It shares ideas from Cython, ctypes, and LuaJIT's ffi, but the\nnon-dependence on any fixed C API is a central point.\n\nIt is a possible solution to a problem that hits notably PyPy --- the\nCPython C API.  The CPython C API was great and, we can argue, it\ncontributed a lot to\nthe present-day success of Python, together with tools built on top of\nit like Cython and SWIG.  However, it may be time to look\nbeyond it.  This talk will thus present CFFI as such an example.\nThis independence is what lets CFFI work equally well on CPython and\non PyPy (and be very fast on the latter thanks to the JIT compiler)."
