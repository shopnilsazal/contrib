# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - python
title: 'Mai Giménez - Un vector por tu palabra'
recordingDate: 1470421515
description: "Mai Giménez - Un vector por tu palabra\n[EuroPython 2016]\n[19 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/un-vector-por-tu-palabra)\n\nEl ecosistema científico de python es extraordinario y saca músculo\ncon las últimas aportaciones de la comunidad científica. Revisaremos\nnuevas aproximaciones a la representación de texto. ¡Tus cadenas de\ntexto merecen algo más que una mísera bolsa de palabras! Veremos cómo\nse aplica la representación distribuida (word embeddings) en un caso\npráctico de aprendizaje automático, y daremos consejos para hacer\nexperimentos replicables y obtener datos significativos.\n\n-----\n\n“Dime con quien andas y te diré cómo eres” Este dicho es una de las\nideas más revolucionarias en  PLN. Podemos saber muchas cosas de una\npalabra por su contexto. No es lo mismo un adorable gato que un gato\nmecánico, pero por el contexto diferenciamos esta palabra polisémica.\nHasta ahora la mayor parte de los modelos representan una frase como\nuna bolsa de palabras. Por ejemplo, si queremos representar este\nconjunto de frases: [“I love Python”, “I love NLP”, “Pyladies are\ncool”] tenemos un vocabulario de siete palabras: [“I”, “love”,\n“Python”, “NLP”, “Pyladies”, “are”, “cool”] esta representación crea\nun vector de tamaño del vocabulario para cada frase, y pone a 1 si la\npalabra aparece y a 0 en el caso contrario : [[1,1,1,0,0,0,0],\n[1,1,0,1,0,0,],[0,0,0,0,1,1,1]] ¡Pero,se pierde el contexto y los\nvectores pueden ser gigantes y con muchísimos 0s!\nRecientemente, hemos encontrado una forma mucho mejor de representar\nlas palabras: La representación distribuida -word2vec, por ejemplo-\nEn esta charla exploramos esta representación y cómo aplicarla en\nproblemas de clasificación utilizando textos de redes sociales.\nNavegaremos por el rico ecosistema científico en python, veremos cómo\ncrear gráficas significativas y hablaremos de la importancia de\nescribir experimentos bien diseñados, replicables y con código\nelegante y por supuesto de la importancia de difundir el conocimiento.\nDebemos inspirar a la siguiente generación de científicos y\ncientíficas ¡Seamos extraordinarios!"
