# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - python
title: 'Christian Trebing - Get in control of your workflows with Airflow'
recordingDate: 1470121101
description: "Christian Trebing - Get in control of your workflows with Airflow\n[EuroPython 2016]\n[20 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/get-in-control-of-your-workflows-with-airflow)\n\nAirflow (https://github.com/airbnb/airflow) is an open source Python\npackage from Airbnb to control your workflows.\n\nThis talk will explain the concepts behind Airflow, demonstrating how\nto define your own workflows in Python code and how to extend the\nfunctionality with new task operators and UI blueprints by developing\nyour own plugins. You'll also get to hear about our experiences at\nBlue Yonder,  using this tool in real-world scenarios.\n\n-----\n\nWhenever you work with data, sooner or later you stumble across the\ndefinition of your workflows. At what point should you process your\ncustomer's data? What subsequent steps are necessary? And what went\nwrong with your data processing last Saturday night?\n\nAt Blue Yonder we use Airflow (https://github.com/airbnb/airflow), an\nopen source Python package from Airbnb to solve these problems. It can\nbe extended with new functionality by developing plugins in Python,\nwithout the need to fork the repo. With Airflow, we define workflows\nas directed acyclic graphs and get a shiny UI for free. Airflow comes\nwith some task operators which can be used out of the box to complete\ncertain tasks. For more specific cases, tasks can be developed by the\nend user. Best of all: even the configuration is done completely in\nPython!\n\nThis talk will explain the concepts behind Airflow, demonstrating how\nto define your own workflows in Python code and how to extend the\nfunctionality with new task operators and UI blueprints. You'll also\nget to hear about our experiences using this tool in real-world\nscenarios."
